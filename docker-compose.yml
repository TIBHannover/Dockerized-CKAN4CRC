version: "3"

volumes:
  ckan_config:
  ckan_home:
  ckan_storage:
  pg_data:

services:
  nginx:
    container_name: nginx
    build:
      context: nginx/
      dockerfile: Dockerfile
    links:
      - ckan
    ports:
      - "0.0.0.0:8001:80"
    networks:
      - backend

  ckan:
    container_name: ckan
    tty: true
    build:
      context: ./ckan
      args:
       - DB_PATH=${CKAN_SQLALCHEMY_URL}
       - CKAN_Site_Url=${CKAN_SITE_URL}
       - SOLR_URL=${CKAN_SOLR_URL}
       - CKAN_MAX_RESOURCE_SIZE=${CKAN_MAX_RESOURCE_SIZE}
       - ALLOW_COLLABORATION=${ALLOW_COLLABORATION}
       - CKAN_SITE_ID=${CKAN_SITE_ID}
       - CKAN_MAX_IMAGE_SIZE=${CKAN_MAX_IMAGE_SIZE}
       - REDIS_URL=${REDIS_URL}
       - APP_DIR=${APP_DIR}
    depends_on: 
      db:
        condition: service_healthy
      solr:
        condition: service_healthy
    ports:
      - "8080"
    networks:
      - frontend
      - backend

    volumes:
      - ckan_config:/usr/lib/ckan/default/config/
      - ckan_home:/usr/lib/ckan
      - ckan_storage:/var/lib/ckan

  db:
    container_name: db 
    build:
      context: ./postgresql
      dockerfile: ./Dockerfile
      args:
        - PG_PASSWORD=${POSTGRES_PASSWORD}
        - PG_USER=${POSTGRES_USER}
        - PG_DB=${POSTGRES_DB}
        - PG_HOST_AUTH_METHOD=${POSTGRES_HOST_AUTH_METHOD}
    environment:
      - PGDATA=${POSTGRES_VOLUME_PATH}
    ports: 
      - "5432"
    networks:
      - backend
    volumes:
      - pg_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 10s
      retries: 10

  solr:
    container_name: solr
    build:
      context: ./solr
      dockerfile: ./Dockerfile
    ports: 
      - "8983"
    networks:
      - backend
    healthcheck:
      test: >-
        curl -s -w "%{http_code}\n" http://localhost:8983/solr -o /dev/null -L \
        | grep -q "200"
      interval: 10s
      timeout: 10s
      retries: 10

  redis:
    container_name: redis
    image: redis
    networks: 
      - backend
    ports: 
      - "6379"

networks:
  frontend:
  backend: